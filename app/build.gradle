plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jlleitschuh.gradle.ktlint" version "10.2.0"
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs"
    id "com.google.firebase.crashlytics"
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {


    compileSdk 32
    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId 'com.example.mybuddygym'
        namespace 'com.example.mybuddygym'
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        mlModelBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    aaptOptions {
        noCompress "model.tflite"
    }

}
kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation('com.googlecode.libphonenumber:libphonenumber:8.12.37')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0-RC'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0-RC'
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'androidx.databinding:databinding-runtime:4.1.3'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31"

    // GSON Library \\
    implementation 'com.google.code.gson:gson:2.8.8'

    // Data Binding Library \\
    kapt "com.android.databinding:compiler:7.0.3"

    // Room Database Library \\
    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.3")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.4.3")
    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.4.0-alpha04")

    // Paging 2 Library \\
    implementation "androidx.paging:paging-runtime-ktx:3.0.1"
    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:3.0.1"
    // optional - RxJava support
    implementation("androidx.paging:paging-rxjava2-ktx:3.0.1")

    //Navigation Library \\
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")
    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Work Manager Library \\
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:2.7.1")

    //Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    //LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"

    //Flurry Analytics
    implementation 'com.flurry.android:analytics:14.4.0@aar'
    implementation "com.google.android.gms:play-services-analytics:18.0.1"

    //Retrofit Dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'org.itishka.gson-flatten:gson-flatten:0.8.1'

    //Password Hashing Dependency
    implementation group: 'at.favre.lib', name: 'bcrypt', version: '0.9.0'

    // Material date and time picker with extra methods
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'


    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'


    //Google maps
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'

    implementation 'com.google.code.gson:gson:2.8.6'
    def room_version = "2.2.0-beta01"
    implementation "androidx.room:room-runtime:2.2.0-beta01"
    annotationProcessor "androidx.room:room-compiler:2.4.0-beta01"
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation "com.google.android.gms:play-services-vision:20.1.3"

//    Video Compressor
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.3'
    implementation('com.googlecode.mp4parser:isoparser:1.0.6') {
        exclude group: 'org.aspectj', module: 'aspectjrt'
    }

    //QR code generator
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.google.zxing:core:3.3.0'

    //QR code scanner
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // Prolific Interactive Material Calendar View
    implementation 'com.github.prolificinteractive:material-calendarview:1.6.1'

    // picasso
    implementation 'com.squareup.picasso:picasso:2.8'

    //for csv export
    implementation 'com.opencsv:opencsv:4.6'

    //for iTextG library
    implementation 'com.itextpdf:itextg:5.5.10'

    // Dagger
    implementation 'com.google.dagger:dagger:2.40'
    kapt 'com.google.dagger:dagger-compiler:2.40'

    //PinView for OTP
    implementation 'io.github.chaosleung:pinview:1.4.3'

    // Truth
    testImplementation 'com.google.truth:truth:1.1.3'

    // Mockito
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation 'org.mockito:mockito-inline:3.8.0'

    //Otp Generation
    implementation 'dev.turingcomplete:kotlin-onetimepassword:2.2.0'

    //Swipe button dependency with both direction function for android
    implementation 'com.github.stfalcon:swipeable-button:0.1.0'

    //Excel data Export
    implementation 'org.apache.poi:poi:3.9'
    implementation 'com.opencsv:opencsv:4.6'

    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-task-text:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-task-audio:0.3.0'

    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.code.gson:gson:2.8.7'

    //GPS Mapping Calculations etc.
    implementation 'org.locationtech.jts:jts-core:1.15.0'

    /*SQLite To Excel dependency */
    implementation 'com.ajts.androidmads.SQLite2Excel:library:1.0.4'


    def camerax_version = "1.1.0-rc01"

    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly-SNAPSHOT'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.0.0-nightly-SNAPSHOT'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.2.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // dependency for slider view
    implementation 'com.github.smarteist:autoimageslider:1.4.0'

}

ktlint {
    reporters {
        reporter "plain"
        reporter "checkstyle"
    }
    outputColorName = "RED"
}

//This allows us to copy the hook script into .git folder everytime the app is being built. Hence ensure that the git-hook is consistent and transferred via version control
task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

// This increases the max heap size available for ktlint workers
tasks.withType(org.jlleitschuh.gradle.ktlint.tasks.BaseKtLintCheckTask).configureEach {
    it.workerMaxHeapSize.set("2048m")
}

tasks.getByPath(':app:preBuild').dependsOn(installGitHook)